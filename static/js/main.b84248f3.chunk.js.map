{"version":3,"sources":["components/Clock.js","audio/beep.mp3","constants/Colors.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","totalSeconds","id","style","color","sessionTurn","duration","Math","floor","toString","padStart","getSeconds","Colors","pale","App","useState","timeLeft","setTimeLeft","sessionLength","setSessionLength","breakLength","setBreakLength","active","setActive","setSessionTurn","audio","useRef","useEffect","intervalId","timeOutId","setTimeout","state","current","play","setInterval","time","clearInterval","clearTimeout","increment","decrement","className","onClick","disabled","fontSize","decrementTimeLeft","incrementTimeLeft","pause","currentTime","src","beep","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b84248f3.chunk.js","sourcesContent":["const Clock = props => {\n  const getMinutes = totalSeconds => {\n    return Math.floor(totalSeconds / 60);\n  };\n\n  const getSeconds = totalSeconds => {\n    return totalSeconds % 60;\n  };\n\n  return (\n    <div\n      id=\"time-left-container\"\n      style={{ color: props.sessionTurn ? '' : '#0f0' }}\n    >\n      <div id=\"timer-label\">{props.sessionTurn ? 'Session' : 'Break'}</div>\n      <div id=\"time-left\">\n        {getMinutes(props.duration).toString().padStart(2, '0')}:\n        {getSeconds(props.duration).toString().padStart(2, '0')}\n      </div>\n    </div>\n  );\n};\n\nexport default Clock;\n","export default __webpack_public_path__ + \"static/media/beep.4b7e3c28.mp3\";","const Colors = { pale: '#e5e8b6' };\n\nexport default Colors;\n","import { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nimport Clock from './components/Clock';\nimport beep from './audio/beep.mp3';\n\nimport Colors from './constants/Colors';\n\nimport MdPlay from 'react-ionicons/lib/MdPlay';\nimport MdPause from 'react-ionicons/lib/MdPause';\nimport MdSquare from 'react-ionicons/lib/MdSquare';\nimport MdAddCircle from 'react-ionicons/lib/MdAddCircle';\nimport MdRemoveCircle from 'react-ionicons/lib/MdRemoveCircle';\n\nfunction App() {\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [active, setActive] = useState(false);\n  const [sessionTurn, setSessionTurn] = useState(true);\n\n  const audio = useRef(null);\n\n  useEffect(() => {\n    let intervalId = null;\n    let timeOutId = null;\n\n    if (timeLeft === 0) {\n      timeOutId = setTimeout(() => {\n        setSessionTurn(state => !state);\n      }, 1000);\n      audio.current.play();\n    }\n\n    if (active) {\n      intervalId = setInterval(() => {\n        setTimeLeft(time => time - 1);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n      clearTimeout(timeOutId);\n    };\n  }, [timeLeft, active]);\n\n  useEffect(() => {\n    if (sessionTurn) {\n      setTimeLeft(sessionLength * 60);\n    } else {\n      setTimeLeft(breakLength * 60);\n    }\n  }, [sessionTurn, sessionLength, breakLength]);\n\n  const increment = time => {\n    return time + 1 > 60 ? 60 : time + 1;\n  };\n\n  const decrement = time => {\n    return time - 1 > 0 ? time - 1 : 1;\n  };\n\n  const decrementTimeLeft = time => {\n    return time - 60 > 0 ? time - 60 : 60;\n  };\n\n  const incrementTimeLeft = time => {\n    return time + 60 > 60 * 60 ? 60 * 60 : time + 60;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"control-length-container\">\n        <div>\n          <h4 id=\"break-label\">Break Length</h4>\n          <div className=\"button-container\">\n            <button\n              onClick={() => setBreakLength(time => decrement(time))}\n              disabled={active}\n              id=\"break-decrement\"\n            >\n              <MdRemoveCircle fontSize=\"40px\" color={Colors.pale} />\n            </button>\n            <span id=\"break-length\">{breakLength}</span>\n            <button\n              onClick={() => setBreakLength(time => increment(time))}\n              disabled={active}\n              id=\"break-increment\"\n            >\n              <MdAddCircle fontSize=\"40px\" color={Colors.pale} />\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <h4 id=\"session-label\">Session Length</h4>\n          <div className=\"button-container\">\n            <button\n              onClick={() => {\n                setSessionLength(time => decrement(time));\n                setTimeLeft(time => decrementTimeLeft(time));\n              }}\n              disabled={active}\n              id=\"session-decrement\"\n            >\n              <MdRemoveCircle fontSize=\"40px\" color={Colors.pale} />\n            </button>\n            <span id=\"session-length\">{sessionLength}</span>\n            <button\n              onClick={() => {\n                setSessionLength(time => increment(time));\n                setTimeLeft(time => incrementTimeLeft(time));\n              }}\n              disabled={active}\n              id=\"session-increment\"\n            >\n              <MdAddCircle fontSize=\"40px\" color={Colors.pale} />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <Clock duration={timeLeft} sessionTurn={sessionTurn} />\n\n      <div className=\"control-clock-container\">\n        <button onClick={() => setActive(state => !state)} id=\"start_stop\">\n          {active ? (\n            <MdPause fontSize=\"60px\" color={Colors.pale} />\n          ) : (\n            <MdPlay fontSize=\"60px\" color={Colors.pale} />\n          )}\n        </button>\n        <button\n          onClick={() => {\n            setActive(false);\n            setTimeLeft(25 * 60);\n            setSessionLength(25);\n            setBreakLength(5);\n            setSessionTurn(true);\n            audio.current.pause();\n            audio.current.currentTime = 0;\n          }}\n          id=\"reset\"\n        >\n          <MdSquare fontSize=\"60px\" color={Colors.pale} />\n        </button>\n      </div>\n      <audio id=\"beep\" src={beep} ref={audio}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}